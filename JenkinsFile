def artifactname = "133testing-app.jar"
def repoName = "rome-rp1-app-repo"
def pipelineName = "balu_scripted_pipeline"
def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def packageName = "rome-rp1-package_${env.BUILD_NUMBER}"
def version = "${env.BUILD_NUMBER}.0"
def pkgName = "rome-rp1-package"

pipeline {
  agent any
  tools {
       maven 'Maven'
   }
   environment {
	 SCANNER_HOME = tool 'sonarScanner'
  }
  stages {
       stage('Build &1') {
           steps {
	   	sh 'mvn clean install -DskipTests=true'
           }
       }
       stage('Test &2') {
	   steps {
	      sh 'mvn test -DskipTests=true'
	   }
	   //post {
	     //always {
		//junit "**/target/surefire-reports/junitreports/*.xml"
	     //}
	   //}
       }

       stage('CodeCoverage &3') {
	 steps {
	    echo 'sonar summaries....'
	    //sonarSummaries()                    
	 }
      }
      
      stage('Artifacts&Packages &4') {
	 steps {
	    echo 'Deploying the change....'
	    //snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}","semanticVersion": "1.${env.BUILD_NUMBER}.0","repositoryName": "${repoName}"}],"branchName":"master"}""")
	    //snDevOpsPackage(name: "${pkgName}-${env.BUILD_NUMBER}", artifactsPayload: """{"artifacts":[{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}", "repositoryName": "${repoName}"}], "branchName":"master"}""")
	 }
      }
      stage('Deploy &5') {
	 steps {
	    echo 'Deploying the change....'
	    snDevOpsChange(ignoreErrors:true)
	 }
      }
  }
}

def sonarSummaries() {
    withSonarQubeEnv('sonarQube_local') {
    	sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/qa-sonar-scanner.properties'
    }
} // end of def sonarsummaries
